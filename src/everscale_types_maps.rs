use anyhow::Result;
use everscale_types::cell::*;
use everscale_types::dict::*;
use everscale_types::models::Lazy;
use everscale_types::num::Tokens;
use everscale_types::util::{CustomDebug, DisplayHash};
use everscale_types::{RcBoc, RcCellFamily};

fn main() -> Result<()> {
    let root = RcBoc::decode_base64("")?;

    let data = root.parse::<ElectorData<_>>().unwrap();
    let mut entries = Vec::new();
    for past_election in data.past_elections.values() {
        let past_election = past_election.unwrap();

        entries.extend(
            past_election
                .frozen_dict
                .iter()
                .collect::<Result<Vec<_>, _>>()
                .unwrap(),
        );
    }

    bench(&entries);

    Ok(())
}

#[inline(never)]
fn bench(entries: &[(CellHash, FrozenStake)]) {
    for _ in 0..1000 {
        let mut result = Dict::<RcCellFamily, CellHash, FrozenStake>::new();
        for (pubkey, frozen_stake) in entries {
            result.add(pubkey, frozen_stake).unwrap();
        }
    }
}

#[derive(CustomDebug, Load)]
struct ElectorData<C: CellFamily> {
    elect: Option<Lazy<C, CurrentElectionData<C>>>,
    credits: Dict<C, CellHash, Tokens>,
    past_elections: Dict<C, u32, PastElection<C>>,
    grams: Tokens,
    active_id: u32,
    #[debug(with = "DisplayHash")]
    active_hash: CellHash,
}

#[derive(CustomDebug, Load)]
struct CurrentElectionData<C: CellFamily> {
    elect_at: u32,
    elect_close: u32,
    min_stake: Tokens,
    total_stake: Tokens,
    members: Dict<C, CellHash, ElectionMember>,
    failed: bool,
    finished: bool,
}

#[derive(CustomDebug, Load)]
struct ElectionMember {
    msg_value: Tokens,
    created_at: u32,
    max_factor: u32,
    #[debug(with = "DisplayHash")]
    src_addr: CellHash,
    #[debug(with = "DisplayHash")]
    adnl_addr: CellHash,
}

#[derive(CustomDebug, Load)]
struct PastElection<C: CellFamily> {
    unfreeze_at: u32,
    stake_held: u32,
    #[debug(with = "DisplayHash")]
    vset_hash: CellHash,
    frozen_dict: Dict<C, CellHash, FrozenStake>,
    total_stake: Tokens,
    bonuses: Tokens,
    complaints: RawDict<C, 256>,
}

#[derive(CustomDebug, Load, Store)]
struct FrozenStake {
    #[debug(with = "DisplayHash")]
    addr: CellHash,
    weight: u64,
    validator_stake: Tokens,
}
